// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIMTool.Database;

#nullable disable

namespace PIMTool.Migrations
{
    [DbContext(typeof(PimContext))]
    [Migration("20231110124817_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.Employee", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"), 1L, 1);

                    b.Property<DateTime>("Birth_Date")
                        .HasColumnType("date");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Visa")
                        .HasColumnType("char(3)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.Group", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"), 1L, 1);

                    b.Property<decimal>("Group_Leader_Id")
                        .HasColumnType("numeric(19,0)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("Group_Leader_Id")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.Project", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"), 1L, 1);

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Group_Id")
                        .HasColumnType("numeric(19,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Project_Number")
                        .HasColumnType("numeric(4,0)");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .HasAnnotation("ProjectStatusAttribute", true);

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("Group_Id");

                    b.HasIndex("Project_Number")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.ProjectEmployee", b =>
                {
                    b.Property<decimal>("Project_Id")
                        .HasColumnType("numeric(19,0)");

                    b.Property<decimal>("Employee_Id")
                        .HasColumnType("numeric(19,0)");

                    b.HasKey("Project_Id", "Employee_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("ProjectEmployees");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.Group", b =>
                {
                    b.HasOne("PIMTool.Core.Domain.Entities.Employee", "Leader")
                        .WithOne("Group")
                        .HasForeignKey("PIMTool.Core.Domain.Entities.Group", "Group_Leader_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.Project", b =>
                {
                    b.HasOne("PIMTool.Core.Domain.Entities.Group", "Group")
                        .WithMany("Projects")
                        .HasForeignKey("Group_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.ProjectEmployee", b =>
                {
                    b.HasOne("PIMTool.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("ProjectEmployee")
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PIMTool.Core.Domain.Entities.Project", "Project")
                        .WithMany("ProjectEmployee")
                        .HasForeignKey("Project_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Group")
                        .IsRequired();

                    b.Navigation("ProjectEmployee");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.Group", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("PIMTool.Core.Domain.Entities.Project", b =>
                {
                    b.Navigation("ProjectEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
